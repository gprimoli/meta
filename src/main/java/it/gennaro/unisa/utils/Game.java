package it.gennaro.unisa.utils;

import io.reactivex.Flowable;
import io.reactivex.functions.Function;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Bytes32;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple3;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.1.
 */
@SuppressWarnings("rawtypes")
public class Game extends Contract {
    public static final String BINARY = "0x60806040523480156200001157600080fd5b50620000447f3c13b5abbc85050d426f9500a16cfd9f7d94261c880b9a4e03d584d28c06059c336200017a60201b60201c565b6200008e6040518060400160405280600581526020017f5377617264000000000000000000000000000000000000000000000000000000815250606460326200019060201b60201c565b620000d96040518060400160405280600681526020017f48616d6d657200000000000000000000000000000000000000000000000000008152506101f4600a6200019060201b60201c565b620001236040518060400160405280600381526020017f426f77000000000000000000000000000000000000000000000000000000000081525060c860056200019060201b60201c565b620001746040518060400160405280600581526020017f5370656172000000000000000000000000000000000000000000000000000000815250670de0b6b3a764000060016200019060201b60201c565b6200057b565b6200018c82826200025a60201b60201c565b5050565b620001c27f3c13b5abbc85050d426f9500a16cfd9f7d94261c880b9a4e03d584d28c06059c336200034b60201b60201c565b62000204576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001fb90620004f4565b60405180910390fd5b60006001808160018154018082558091505003906000526020600020906006020190508381600001908051906020019062000241929190620003bd565b5082816001018190555081816002018190555050505050565b6200026c82826200034b60201b60201c565b6200034757600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550620002ec620003b560201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b828054620003cb9062000545565b90600052602060002090601f016020900481019282620003ef57600085556200043b565b82601f106200040a57805160ff19168380011785556200043b565b828001600101855582156200043b579182015b828111156200043a5782518255916020019190600101906200041d565b5b5090506200044a91906200044e565b5090565b5b80821115620004695760008160009055506001016200044f565b5090565b600082825260208201905092915050565b7f446576692065737365726520756e2047616d65204d617374657220706572206560008201527f7365677569726520717565737461206f706572617a696f6e6500000000000000602082015250565b6000620004dc6039836200046d565b9150620004e9826200047e565b604082019050919050565b600060208201905081810360008301526200050f81620004cd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200055e57607f821691505b6020821081141562000575576200057462000516565b5b50919050565b61285f806200058b6000396000f3fe6080604052600436106101235760003560e01c806391d14854116100a0578063bbda33d911610064578063bbda33d914610491578063d547741f146104bc578063d7f8a18d146104e5578063e39bc13a14610522578063e7fb74c71461056157610183565b806391d148541461039457806399597b70146103d1578063a217fddf146103fc578063adb18e2f14610427578063b364e0071461045257610183565b80632f2ff15d116100e75780632f2ff15d146102c357806336568abe146102ec57806342f06532146103155780635aed78021461034057806391b6be9a1461036b57610183565b806301ffc9a7146101de578063108155bc1461021b57806320e57366146102445780632409dfa21461026f578063248a9ca31461028657610183565b366101835734600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825461017a9190611c64565b92505081905550005b34600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546101d59190611c64565b92505081905550005b3480156101ea57600080fd5b5061020560048036038101906102009190611d26565b61058a565b6040516102129190611d6e565b60405180910390f35b34801561022757600080fd5b50610242600480360381019061023d9190611efb565b610604565b005b34801561025057600080fd5b506102596106c1565b6040516102669190611f79565b60405180910390f35b34801561027b57600080fd5b5061028461070e565b005b34801561029257600080fd5b506102ad60048036038101906102a89190611fca565b6107c0565b6040516102ba9190612006565b60405180910390f35b3480156102cf57600080fd5b506102ea60048036038101906102e5919061207f565b6107df565b005b3480156102f857600080fd5b50610313600480360381019061030e919061207f565b610808565b005b34801561032157600080fd5b5061032a61088b565b6040516103379190611f79565b60405180910390f35b34801561034c57600080fd5b506103556108d5565b6040516103629190612147565b60405180910390f35b34801561037757600080fd5b50610392600480360381019061038d9190612169565b61090e565b005b3480156103a057600080fd5b506103bb60048036038101906103b6919061207f565b610d2e565b6040516103c89190611d6e565b60405180910390f35b3480156103dd57600080fd5b506103e6610d98565b6040516103f39190612006565b60405180910390f35b34801561040857600080fd5b50610411610dbc565b60405161041e9190612006565b60405180910390f35b34801561043357600080fd5b5061043c610dc3565b6040516104499190611f79565b60405180910390f35b34801561045e57600080fd5b5061047960048036038101906104749190612169565b610dd0565b60405161048893929190612196565b60405180910390f35b34801561049d57600080fd5b506104a6610f31565b6040516104b39190612147565b60405180910390f35b3480156104c857600080fd5b506104e360048036038101906104de919061207f565b610f6e565b005b3480156104f157600080fd5b5061050c600480360381019061050791906121d4565b610f97565b6040516105199190612223565b60405180910390f35b34801561052e57600080fd5b5061054960048036038101906105449190612169565b61105b565b60405161055893929190612196565b60405180910390f35b34801561056d57600080fd5b5061058860048036038101906105839190612169565b611214565b005b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806105fd57506105fc8261167c565b5b9050919050565b61062e7f3c13b5abbc85050d426f9500a16cfd9f7d94261c880b9a4e03d584d28c06059c33610d2e565b61066d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610664906122b0565b60405180910390fd5b6000600180816001815401808255809150500390600052602060002090600602019050838160000190805190602001906106a8929190611b88565b5082816001018190555081816002018190555050505050565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010180549050905090565b6107387f3c13b5abbc85050d426f9500a16cfd9f7d94261c880b9a4e03d584d28c06059c33610d2e565b610777576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076e906122b0565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156107bd573d6000803e3d6000fd5b50565b6000806000838152602001908152602001600020600101549050919050565b6107e8826107c0565b6107f9816107f46116e6565b6116ee565b610803838361178b565b505050565b6108106116e6565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461087d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087490612342565b60405180910390fd5b610887828261186b565b5050565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b6040518060400160405280600981526020017f546573742047616d65000000000000000000000000000000000000000000000081525081565b600081101580156109635750600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054905081105b6109705761096f612362565b5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010182815481106109c6576109c5612391565b5b9060005260206000209060020201604051806040016040529081600082015481526020016001820154815250509050600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010180549050610a8991906123c0565b81548110610a9a57610a99612391565b5b9060005260206000209060020201600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018381548110610afc57610afb612391565b5b90600052602060002090600202016000820154816000015560018201548160010155905050600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101805480610b7357610b726123f4565b5b60019003818190600052602060002090600202016000808201600090556001820160009055505090556001816000015181548110610bb457610bb3612391565b5b90600052602060002090600602016003016000815480929190610bd690612423565b91905055506001816000015181548110610bf357610bf2612391565b5b906000526020600020906006020160050160008260200151815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001816000015181548110610c5457610c53612391565b5b906000526020600020906006020160040181602001519080600181540180825580915050600190039060005260206000200160009091909190915055606460506001836000015181548110610cac57610cab612391565b5b906000526020600020906006020160010154610cc8919061244d565b610cd291906124d6565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254610d239190611c64565b925050819055505050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b7f3c13b5abbc85050d426f9500a16cfd9f7d94261c880b9a4e03d584d28c06059c81565b6000801b81565b6000600180549050905090565b606060008060008410158015610dea575060018054905084105b610df757610df6612362565b5b60018481548110610e0b57610e0a612391565b5b906000526020600020906006020160000160018581548110610e3057610e2f612391565b5b90600052602060002090600602016001015460018681548110610e5657610e55612391565b5b90600052602060002090600602016003015460018781548110610e7c57610e7b612391565b5b906000526020600020906006020160020154610e9891906123c0565b828054610ea490612536565b80601f0160208091040260200160405190810160405280929190818152602001828054610ed090612536565b8015610f1d5780601f10610ef257610100808354040283529160200191610f1d565b820191906000526020600020905b815481529060010190602001808311610f0057829003601f168201915b505050505092509250925092509193909250565b60606040518060400160405280600981526020017f546573742047616d650000000000000000000000000000000000000000000000815250905090565b610f77826107c0565b610f8881610f836116e6565b6116ee565b610f92838361186b565b505050565b6000808310158015610fad575060018054905083105b610fba57610fb9612362565b5b60008210158015610fef575060018381548110610fda57610fd9612391565b5b90600052602060002090600602016002015482105b610ffc57610ffb612362565b5b600183815481106110105761100f612391565b5b9060005260206000209060060201600501600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b6060600080600084101580156110b55750600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054905084105b6110c2576110c1612362565b5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101858154811061111857611117612391565b5b9060005260206000209060020201604051806040016040529081600082015481526020016001820154815250509050600181600001518154811061115f5761115e612391565b5b90600052602060002090600602016000018160000151826020015182805461118690612536565b80601f01602080910402602001604051908101604052809291908181526020018280546111b290612536565b80156111ff5780601f106111d4576101008083540402835291602001916111ff565b820191906000526020600020905b8154815290600101906020018083116111e257829003601f168201915b50505050509250935093509350509193909250565b60008110158015611229575060018054905081105b61123657611235612362565b5b6001818154811061124a57611249612391565b5b906000526020600020906006020160020154600182815481106112705761126f612391565b5b906000526020600020906006020160030154106112c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112b9906125da565b60405180910390fd5b600181815481106112d6576112d5612391565b5b906000526020600020906006020160010154600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154101561136c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161136390612646565b60405180910390fd5b600181815481106113805761137f612391565b5b906000526020600020906006020160010154600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546113e391906123c0565b92505081905550600060018281548110611400576113ff612391565b5b906000526020600020906006020160040180549050141561148d576001818154811061142f5761142e612391565b5b90600052602060002090600602016004016001828154811061145457611453612391565b5b90600052602060002090600602016003015490806001815401808255809150506001900390600052602060002001600090919091909150555b6000600182815481106114a3576114a2612391565b5b906000526020600020906006020160040160018084815481106114c9576114c8612391565b5b9060005260206000209060060201600401805490506114e891906123c0565b815481106114f9576114f8612391565b5b906000526020600020015490506001828154811061151a57611519612391565b5b906000526020600020906006020160040180548061153b5761153a6123f4565b5b600190038181906000526020600020016000905590556000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016001816001815401808255809150500390600052602060002090600202019050828160000181905550818160010181905550600183815481106115db576115da612391565b5b906000526020600020906006020160030160008154809291906115fd90612666565b9190505550336001848154811061161757611616612391565b5b9060005260206000209060060201600501600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b6116f88282610d2e565b6117875761171d8173ffffffffffffffffffffffffffffffffffffffff16601461194c565b61172b8360001c602061194c565b60405160200161173c929190612783565b6040516020818303038152906040526040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161177e9190612147565b60405180910390fd5b5050565b6117958282610d2e565b61186757600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555061180c6116e6565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6118758282610d2e565b1561194857600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506118ed6116e6565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b60606000600283600261195f919061244d565b6119699190611c64565b67ffffffffffffffff81111561198257611981611da4565b5b6040519080825280601f01601f1916602001820160405280156119b45781602001600182028036833780820191505090505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106119ec576119eb612391565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110611a5057611a4f612391565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002611a90919061244d565b611a9a9190611c64565b90505b6001811115611b3a577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110611adc57611adb612391565b5b1a60f81b828281518110611af357611af2612391565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c945080611b3390612423565b9050611a9d565b5060008414611b7e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b7590612809565b60405180910390fd5b8091505092915050565b828054611b9490612536565b90600052602060002090601f016020900481019282611bb65760008555611bfd565b82601f10611bcf57805160ff1916838001178555611bfd565b82800160010185558215611bfd579182015b82811115611bfc578251825591602001919060010190611be1565b5b509050611c0a9190611c0e565b5090565b5b80821115611c27576000816000905550600101611c0f565b5090565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611c6f82611c2b565b9150611c7a83611c2b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611caf57611cae611c35565b5b828201905092915050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611d0381611cce565b8114611d0e57600080fd5b50565b600081359050611d2081611cfa565b92915050565b600060208284031215611d3c57611d3b611cc4565b5b6000611d4a84828501611d11565b91505092915050565b60008115159050919050565b611d6881611d53565b82525050565b6000602082019050611d836000830184611d5f565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611ddc82611d93565b810181811067ffffffffffffffff82111715611dfb57611dfa611da4565b5b80604052505050565b6000611e0e611cba565b9050611e1a8282611dd3565b919050565b600067ffffffffffffffff821115611e3a57611e39611da4565b5b611e4382611d93565b9050602081019050919050565b82818337600083830152505050565b6000611e72611e6d84611e1f565b611e04565b905082815260208101848484011115611e8e57611e8d611d8e565b5b611e99848285611e50565b509392505050565b600082601f830112611eb657611eb5611d89565b5b8135611ec6848260208601611e5f565b91505092915050565b611ed881611c2b565b8114611ee357600080fd5b50565b600081359050611ef581611ecf565b92915050565b600080600060608486031215611f1457611f13611cc4565b5b600084013567ffffffffffffffff811115611f3257611f31611cc9565b5b611f3e86828701611ea1565b9350506020611f4f86828701611ee6565b9250506040611f6086828701611ee6565b9150509250925092565b611f7381611c2b565b82525050565b6000602082019050611f8e6000830184611f6a565b92915050565b6000819050919050565b611fa781611f94565b8114611fb257600080fd5b50565b600081359050611fc481611f9e565b92915050565b600060208284031215611fe057611fdf611cc4565b5b6000611fee84828501611fb5565b91505092915050565b61200081611f94565b82525050565b600060208201905061201b6000830184611ff7565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061204c82612021565b9050919050565b61205c81612041565b811461206757600080fd5b50565b60008135905061207981612053565b92915050565b6000806040838503121561209657612095611cc4565b5b60006120a485828601611fb5565b92505060206120b58582860161206a565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b838110156120f95780820151818401526020810190506120de565b83811115612108576000848401525b50505050565b6000612119826120bf565b61212381856120ca565b93506121338185602086016120db565b61213c81611d93565b840191505092915050565b60006020820190508181036000830152612161818461210e565b905092915050565b60006020828403121561217f5761217e611cc4565b5b600061218d84828501611ee6565b91505092915050565b600060608201905081810360008301526121b0818661210e565b90506121bf6020830185611f6a565b6121cc6040830184611f6a565b949350505050565b600080604083850312156121eb576121ea611cc4565b5b60006121f985828601611ee6565b925050602061220a85828601611ee6565b9150509250929050565b61221d81612041565b82525050565b60006020820190506122386000830184612214565b92915050565b7f446576692065737365726520756e2047616d65204d617374657220706572206560008201527f7365677569726520717565737461206f706572617a696f6e6500000000000000602082015250565b600061229a6039836120ca565b91506122a58261223e565b604082019050919050565b600060208201905081810360008301526122c98161228d565b9050919050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b600061232c602f836120ca565b9150612337826122d0565b604082019050919050565b6000602082019050818103600083015261235b8161231f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006123cb82611c2b565b91506123d683611c2b565b9250828210156123e9576123e8611c35565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600061242e82611c2b565b9150600082141561244257612441611c35565b5b600182039050919050565b600061245882611c2b565b915061246383611c2b565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561249c5761249b611c35565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006124e182611c2b565b91506124ec83611c2b565b9250826124fc576124fb6124a7565b5b828204905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061254e57607f821691505b6020821081141561256257612561612507565b5b50919050565b7f536f6e6f2073746174692076656e6475746920747574746920676c692065736560008201527f6d706c617269206469207175657374274974656d000000000000000000000000602082015250565b60006125c46034836120ca565b91506125cf82612568565b604082019050919050565b600060208201905081810360008301526125f3816125b7565b9050919050565b7f4e6f6e2068616920616262617374616e7a6120476f6c64000000000000000000600082015250565b60006126306017836120ca565b915061263b826125fa565b602082019050919050565b6000602082019050818103600083015261265f81612623565b9050919050565b600061267182611c2b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156126a4576126a3611c35565b5b600182019050919050565b600081905092915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b60006126f06017836126af565b91506126fb826126ba565b601782019050919050565b6000612711826120bf565b61271b81856126af565b935061272b8185602086016120db565b80840191505092915050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b600061276d6011836126af565b915061277882612737565b601182019050919050565b600061278e826126e3565b915061279a8285612706565b91506127a582612760565b91506127b18284612706565b91508190509392505050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b60006127f36020836120ca565b91506127fe826127bd565b602082019050919050565b60006020820190508181036000830152612822816127e6565b905091905056fea2646970667358221220ad49560f8dea045eff651637d27ebacf369168ddc4cd09979df69b4aa02e8ae264736f6c634300080a0033";

    public static final String FUNC_DEFAULT_ADMIN_ROLE = "DEFAULT_ADMIN_ROLE";

    public static final String FUNC_GAME_MASTER = "GAME_MASTER";

    public static final String FUNC_GAME_NAME = "GAME_NAME";

    public static final String FUNC_GETROLEADMIN = "getRoleAdmin";

    public static final String FUNC_GRANTROLE = "grantRole";

    public static final String FUNC_HASROLE = "hasRole";

    public static final String FUNC_RENOUNCEROLE = "renounceRole";

    public static final String FUNC_REVOKEROLE = "revokeRole";

    public static final String FUNC_SUPPORTSINTERFACE = "supportsInterface";

    public static final String FUNC_GETGAMENAME = "getGameName";

    public static final String FUNC_CREATEITEM = "createItem";

    public static final String FUNC_GETARMORYWEIGHT = "getArmoryWeight";

    public static final String FUNC_GETITEMFROMARMORY = "getItemFromArmory";

    public static final String FUNC_GETGOLD = "getGold";

    public static final String FUNC_DRAWBACK = "drawback";

    public static final String FUNC_GETOWNER = "getOwner";

    public static final String FUNC_GETINVENTORYWEIGHT = "getInventoryWeight";

    public static final String FUNC_GETITEMFROMINVENORY = "getItemFromInvenory";

    public static final String FUNC_BUYITEM = "buyItem";

    public static final String FUNC_SELLITEM = "sellItem";

    public static final Event ROLEADMINCHANGED_EVENT = new Event("RoleAdminChanged",
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>(true) {}, new TypeReference<Bytes32>(true) {}, new TypeReference<Bytes32>(true) {}));
    ;

    public static final Event ROLEGRANTED_EVENT = new Event("RoleGranted",
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>(true) {}, new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
    ;

    public static final Event ROLEREVOKED_EVENT = new Event("RoleRevoked",
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>(true) {}, new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
    ;

    protected static final HashMap<String, String> _addresses;

    static {
        _addresses = new HashMap<String, String>();
        _addresses.put("5777", "0x1bb44c35129034c97F3B0b2Ed33452958d845f1d");
    }

    @Deprecated
    protected Game(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected Game(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected Game(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected Game(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public List<RoleAdminChangedEventResponse> getRoleAdminChangedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ROLEADMINCHANGED_EVENT, transactionReceipt);
        ArrayList<RoleAdminChangedEventResponse> responses = new ArrayList<RoleAdminChangedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            RoleAdminChangedEventResponse typedResponse = new RoleAdminChangedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.previousAdminRole = (byte[]) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.newAdminRole = (byte[]) eventValues.getIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<RoleAdminChangedEventResponse> roleAdminChangedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, RoleAdminChangedEventResponse>() {
            @Override
            public RoleAdminChangedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ROLEADMINCHANGED_EVENT, log);
                RoleAdminChangedEventResponse typedResponse = new RoleAdminChangedEventResponse();
                typedResponse.log = log;
                typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.previousAdminRole = (byte[]) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.newAdminRole = (byte[]) eventValues.getIndexedValues().get(2).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<RoleAdminChangedEventResponse> roleAdminChangedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ROLEADMINCHANGED_EVENT));
        return roleAdminChangedEventFlowable(filter);
    }

    public List<RoleGrantedEventResponse> getRoleGrantedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ROLEGRANTED_EVENT, transactionReceipt);
        ArrayList<RoleGrantedEventResponse> responses = new ArrayList<RoleGrantedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            RoleGrantedEventResponse typedResponse = new RoleGrantedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.account = (String) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.sender = (String) eventValues.getIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<RoleGrantedEventResponse> roleGrantedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, RoleGrantedEventResponse>() {
            @Override
            public RoleGrantedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ROLEGRANTED_EVENT, log);
                RoleGrantedEventResponse typedResponse = new RoleGrantedEventResponse();
                typedResponse.log = log;
                typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.account = (String) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.sender = (String) eventValues.getIndexedValues().get(2).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<RoleGrantedEventResponse> roleGrantedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ROLEGRANTED_EVENT));
        return roleGrantedEventFlowable(filter);
    }

    public List<RoleRevokedEventResponse> getRoleRevokedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ROLEREVOKED_EVENT, transactionReceipt);
        ArrayList<RoleRevokedEventResponse> responses = new ArrayList<RoleRevokedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            RoleRevokedEventResponse typedResponse = new RoleRevokedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.account = (String) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.sender = (String) eventValues.getIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<RoleRevokedEventResponse> roleRevokedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, RoleRevokedEventResponse>() {
            @Override
            public RoleRevokedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ROLEREVOKED_EVENT, log);
                RoleRevokedEventResponse typedResponse = new RoleRevokedEventResponse();
                typedResponse.log = log;
                typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.account = (String) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.sender = (String) eventValues.getIndexedValues().get(2).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<RoleRevokedEventResponse> roleRevokedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ROLEREVOKED_EVENT));
        return roleRevokedEventFlowable(filter);
    }

    public RemoteFunctionCall<byte[]> DEFAULT_ADMIN_ROLE() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_DEFAULT_ADMIN_ROLE,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public RemoteFunctionCall<byte[]> GAME_MASTER() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GAME_MASTER,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public RemoteFunctionCall<String> GAME_NAME() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GAME_NAME,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<byte[]> getRoleAdmin(byte[] role) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETROLEADMIN,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public RemoteFunctionCall<TransactionReceipt> grantRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_GRANTROLE,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role),
                new org.web3j.abi.datatypes.Address(account)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Boolean> hasRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_HASROLE,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role),
                new org.web3j.abi.datatypes.Address(account)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<TransactionReceipt> renounceRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_RENOUNCEROLE,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role),
                new org.web3j.abi.datatypes.Address(account)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> revokeRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REVOKEROLE,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role),
                new org.web3j.abi.datatypes.Address(account)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Boolean> supportsInterface(byte[] interfaceId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_SUPPORTSINTERFACE,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes4(interfaceId)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<String> getGameName() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETGAMENAME,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<TransactionReceipt> createItem(String name, BigInteger price, BigInteger qtyMAX) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_CREATEITEM,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(name),
                new org.web3j.abi.datatypes.generated.Uint256(price),
                new org.web3j.abi.datatypes.generated.Uint256(qtyMAX)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<BigInteger> getArmoryWeight() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETARMORYWEIGHT,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<Tuple3<String, BigInteger, BigInteger>> getItemFromArmory(BigInteger id) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETITEMFROMARMORY,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(id)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple3<String, BigInteger, BigInteger>>(function,
                new Callable<Tuple3<String, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple3<String, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple3<String, BigInteger, BigInteger>(
                                (String) results.get(0).getValue(),
                                (BigInteger) results.get(1).getValue(),
                                (BigInteger) results.get(2).getValue());
                    }
                });
    }

    public RemoteFunctionCall<BigInteger> getGold() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETGOLD,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> drawback() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DRAWBACK,
                Arrays.<Type>asList(),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<String> getOwner(BigInteger id, BigInteger num) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETOWNER,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(id),
                new org.web3j.abi.datatypes.generated.Uint256(num)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<BigInteger> getInventoryWeight() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETINVENTORYWEIGHT,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<Tuple3<String, BigInteger, BigInteger>> getItemFromInvenory(BigInteger idInventory) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETITEMFROMINVENORY,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(idInventory)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple3<String, BigInteger, BigInteger>>(function,
                new Callable<Tuple3<String, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple3<String, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple3<String, BigInteger, BigInteger>(
                                (String) results.get(0).getValue(),
                                (BigInteger) results.get(1).getValue(),
                                (BigInteger) results.get(2).getValue());
                    }
                });
    }

    public RemoteFunctionCall<TransactionReceipt> buyItem(BigInteger id) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_BUYITEM,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(id)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> sellItem(BigInteger idInventory) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SELLITEM,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(idInventory)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static Game load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new Game(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static Game load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new Game(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static Game load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new Game(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static Game load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new Game(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<Game> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(Game.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    public static RemoteCall<Game> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(Game.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<Game> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Game.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<Game> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Game.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    protected String getStaticDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }

    public static String getPreviouslyDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }

    public static class RoleAdminChangedEventResponse extends BaseEventResponse {
        public byte[] role;

        public byte[] previousAdminRole;

        public byte[] newAdminRole;
    }

    public static class RoleGrantedEventResponse extends BaseEventResponse {
        public byte[] role;

        public String account;

        public String sender;
    }

    public static class RoleRevokedEventResponse extends BaseEventResponse {
        public byte[] role;

        public String account;

        public String sender;
    }
}
