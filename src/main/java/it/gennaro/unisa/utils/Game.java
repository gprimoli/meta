package it.gennaro.unisa.utils;

import io.reactivex.Flowable;
import io.reactivex.functions.Function;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Bytes32;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple3;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.1.
 */
@SuppressWarnings("rawtypes")
public class Game extends Contract {
    public static final String BINARY = "0x60806040523480156200001157600080fd5b50620000447f3c13b5abbc85050d426f9500a16cfd9f7d94261c880b9a4e03d584d28c06059c336200017460201b60201c565b6200008e6040518060400160405280600581526020017f5377617264000000000000000000000000000000000000000000000000000000815250606460326200018a60201b60201c565b620000d96040518060400160405280600681526020017f48616d6d657200000000000000000000000000000000000000000000000000008152506101f4600a6200018a60201b60201c565b620001236040518060400160405280600381526020017f426f77000000000000000000000000000000000000000000000000000000000081525060c860056200018a60201b60201c565b6200016e6040518060400160405280600581526020017f53706561720000000000000000000000000000000000000000000000000000008152506103e860016200018a60201b60201c565b62000575565b6200018682826200025460201b60201c565b5050565b620001bc7f3c13b5abbc85050d426f9500a16cfd9f7d94261c880b9a4e03d584d28c06059c336200034560201b60201c565b620001fe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001f590620004ee565b60405180910390fd5b6000600180816001815401808255809150500390600052602060002090600602019050838160000190805190602001906200023b929190620003b7565b5082816001018190555081816002018190555050505050565b6200026682826200034560201b60201c565b6200034157600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550620002e6620003af60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b828054620003c5906200053f565b90600052602060002090601f016020900481019282620003e9576000855562000435565b82601f106200040457805160ff191683800117855562000435565b8280016001018555821562000435579182015b828111156200043457825182559160200191906001019062000417565b5b50905062000444919062000448565b5090565b5b808211156200046357600081600090555060010162000449565b5090565b600082825260208201905092915050565b7f446576692065737365726520756e2047616d65204d617374657220706572206560008201527f7365677569726520717565737461206f706572617a696f6e6500000000000000602082015250565b6000620004d660398362000467565b9150620004e38262000478565b604082019050919050565b600060208201905081810360008301526200050981620004c7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200055857607f821691505b602082108114156200056f576200056e62000510565b5b50919050565b61294e80620005856000396000f3fe60806040526004361061012e5760003560e01c806391d14854116100ab578063b364e0071161006f578063b364e00714610486578063bbda33d9146104c5578063d547741f146104f0578063d7f8a18d14610519578063e39bc13a14610556578063e7fb74c7146105955761018e565b806391d148541461039f57806399597b70146103dc578063a217fddf14610407578063a2d37b8614610432578063adb18e2f1461045b5761018e565b80632f2ff15d116100f25780632f2ff15d146102ce57806336568abe146102f757806342f06532146103205780635aed78021461034b57806391b6be9a146103765761018e565b806301ffc9a7146101e9578063108155bc1461022657806320e573661461024f5780632409dfa21461027a578063248a9ca3146102915761018e565b3661018e5734600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546101859190611d13565b92505081905550005b34600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546101e09190611d13565b92505081905550005b3480156101f557600080fd5b50610210600480360381019061020b9190611dd5565b6105be565b60405161021d9190611e1d565b60405180910390f35b34801561023257600080fd5b5061024d60048036038101906102489190611faa565b610638565b005b34801561025b57600080fd5b506102646106f5565b6040516102719190612028565b60405180910390f35b34801561028657600080fd5b5061028f610742565b005b34801561029d57600080fd5b506102b860048036038101906102b39190612079565b6107f4565b6040516102c591906120b5565b60405180910390f35b3480156102da57600080fd5b506102f560048036038101906102f0919061212e565b610813565b005b34801561030357600080fd5b5061031e6004803603810190610319919061212e565b61083c565b005b34801561032c57600080fd5b506103356108bf565b6040516103429190612028565b60405180910390f35b34801561035757600080fd5b50610360610909565b60405161036d91906121f6565b60405180910390f35b34801561038257600080fd5b5061039d60048036038101906103989190612218565b610942565b005b3480156103ab57600080fd5b506103c660048036038101906103c1919061212e565b610d62565b6040516103d39190611e1d565b60405180910390f35b3480156103e857600080fd5b506103f1610dcc565b6040516103fe91906120b5565b60405180910390f35b34801561041357600080fd5b5061041c610df0565b60405161042991906120b5565b60405180910390f35b34801561043e57600080fd5b5061045960048036038101906104549190612245565b610df7565b005b34801561046757600080fd5b50610470610ebd565b60405161047d9190612028565b60405180910390f35b34801561049257600080fd5b506104ad60048036038101906104a89190612218565b610eca565b6040516104bc93929190612285565b60405180910390f35b3480156104d157600080fd5b506104da61102b565b6040516104e791906121f6565b60405180910390f35b3480156104fc57600080fd5b506105176004803603810190610512919061212e565b611068565b005b34801561052557600080fd5b50610540600480360381019061053b91906122c3565b611091565b60405161054d9190612312565b60405180910390f35b34801561056257600080fd5b5061057d60048036038101906105789190612218565b611155565b60405161058c93929190612285565b60405180910390f35b3480156105a157600080fd5b506105bc60048036038101906105b79190612218565b61130e565b005b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061063157506106308261172b565b5b9050919050565b6106627f3c13b5abbc85050d426f9500a16cfd9f7d94261c880b9a4e03d584d28c06059c33610d62565b6106a1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106989061239f565b60405180910390fd5b6000600180816001815401808255809150500390600052602060002090600602019050838160000190805190602001906106dc929190611c37565b5082816001018190555081816002018190555050505050565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010180549050905090565b61076c7f3c13b5abbc85050d426f9500a16cfd9f7d94261c880b9a4e03d584d28c06059c33610d62565b6107ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a29061239f565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156107f1573d6000803e3d6000fd5b50565b6000806000838152602001908152602001600020600101549050919050565b61081c826107f4565b61082d81610828611795565b61179d565b610837838361183a565b505050565b610844611795565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146108b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a890612431565b60405180910390fd5b6108bb828261191a565b5050565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b6040518060400160405280600981526020017f546573742047616d65000000000000000000000000000000000000000000000081525081565b600081101580156109975750600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054905081105b6109a4576109a3612451565b5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010182815481106109fa576109f9612480565b5b9060005260206000209060020201604051806040016040529081600082015481526020016001820154815250509050600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010180549050610abd91906124af565b81548110610ace57610acd612480565b5b9060005260206000209060020201600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018381548110610b3057610b2f612480565b5b90600052602060002090600202016000820154816000015560018201548160010155905050600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101805480610ba757610ba66124e3565b5b60019003818190600052602060002090600202016000808201600090556001820160009055505090556001816000015181548110610be857610be7612480565b5b90600052602060002090600602016003016000815480929190610c0a90612512565b91905055506001816000015181548110610c2757610c26612480565b5b906000526020600020906006020160050160008260200151815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001816000015181548110610c8857610c87612480565b5b906000526020600020906006020160040181602001519080600181540180825580915050600190039060005260206000200160009091909190915055606460506001836000015181548110610ce057610cdf612480565b5b906000526020600020906006020160010154610cfc919061253c565b610d0691906125c5565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254610d579190611d13565b925050819055505050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b7f3c13b5abbc85050d426f9500a16cfd9f7d94261c880b9a4e03d584d28c06059c81565b6000801b81565b610e217f3c13b5abbc85050d426f9500a16cfd9f7d94261c880b9a4e03d584d28c06059c33610d62565b610e60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e579061239f565b60405180910390fd5b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254610eb29190611d13565b925050819055505050565b6000600180549050905090565b606060008060008410158015610ee4575060018054905084105b610ef157610ef0612451565b5b60018481548110610f0557610f04612480565b5b906000526020600020906006020160000160018581548110610f2a57610f29612480565b5b90600052602060002090600602016001015460018681548110610f5057610f4f612480565b5b90600052602060002090600602016003015460018781548110610f7657610f75612480565b5b906000526020600020906006020160020154610f9291906124af565b828054610f9e90612625565b80601f0160208091040260200160405190810160405280929190818152602001828054610fca90612625565b80156110175780601f10610fec57610100808354040283529160200191611017565b820191906000526020600020905b815481529060010190602001808311610ffa57829003601f168201915b505050505092509250925092509193909250565b60606040518060400160405280600981526020017f546573742047616d650000000000000000000000000000000000000000000000815250905090565b611071826107f4565b6110828161107d611795565b61179d565b61108c838361191a565b505050565b60008083101580156110a7575060018054905083105b6110b4576110b3612451565b5b600082101580156110e95750600183815481106110d4576110d3612480565b5b90600052602060002090600602016002015482105b6110f6576110f5612451565b5b6001838154811061110a57611109612480565b5b9060005260206000209060060201600501600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b6060600080600084101580156111af5750600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054905084105b6111bc576111bb612451565b5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101858154811061121257611211612480565b5b9060005260206000209060020201604051806040016040529081600082015481526020016001820154815250509050600181600001518154811061125957611258612480565b5b90600052602060002090600602016000018160000151826020015182805461128090612625565b80601f01602080910402602001604051908101604052809291908181526020018280546112ac90612625565b80156112f95780601f106112ce576101008083540402835291602001916112f9565b820191906000526020600020905b8154815290600101906020018083116112dc57829003601f168201915b50505050509250935093509350509193909250565b60008110158015611323575060018054905081105b6113305761132f612451565b5b6001818154811061134457611343612480565b5b9060005260206000209060060201600201546001828154811061136a57611369612480565b5b906000526020600020906006020160030154106113bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113b3906126c9565b60405180910390fd5b600181815481106113d0576113cf612480565b5b906000526020600020906006020160010154600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541015611466576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161145d90612735565b60405180910390fd5b6001818154811061147a57611479612480565b5b906000526020600020906006020160010154600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546114dd91906124af565b925050819055506000600182815481106114fa576114f9612480565b5b9060005260206000209060060201600401805490501415611587576001818154811061152957611528612480565b5b90600052602060002090600602016004016001828154811061154e5761154d612480565b5b90600052602060002090600602016003015490806001815401808255809150506001900390600052602060002001600090919091909150555b60006001828154811061159d5761159c612480565b5b906000526020600020906006020160040160018084815481106115c3576115c2612480565b5b9060005260206000209060060201600401805490506115e291906124af565b815481106115f3576115f2612480565b5b906000526020600020015490506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160018160018154018082558091505003906000526020600020906002020190508281600001819055508181600101819055506001838154811061168a57611689612480565b5b906000526020600020906006020160030160008154809291906116ac90612755565b919050555033600184815481106116c6576116c5612480565b5b9060005260206000209060060201600501600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b6117a78282610d62565b611836576117cc8173ffffffffffffffffffffffffffffffffffffffff1660146119fb565b6117da8360001c60206119fb565b6040516020016117eb929190612872565b6040516020818303038152906040526040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161182d91906121f6565b60405180910390fd5b5050565b6118448282610d62565b61191657600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506118bb611795565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6119248282610d62565b156119f757600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555061199c611795565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b606060006002836002611a0e919061253c565b611a189190611d13565b67ffffffffffffffff811115611a3157611a30611e53565b5b6040519080825280601f01601f191660200182016040528015611a635781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110611a9b57611a9a612480565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110611aff57611afe612480565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002611b3f919061253c565b611b499190611d13565b90505b6001811115611be9577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110611b8b57611b8a612480565b5b1a60f81b828281518110611ba257611ba1612480565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c945080611be290612512565b9050611b4c565b5060008414611c2d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c24906128f8565b60405180910390fd5b8091505092915050565b828054611c4390612625565b90600052602060002090601f016020900481019282611c655760008555611cac565b82601f10611c7e57805160ff1916838001178555611cac565b82800160010185558215611cac579182015b82811115611cab578251825591602001919060010190611c90565b5b509050611cb99190611cbd565b5090565b5b80821115611cd6576000816000905550600101611cbe565b5090565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611d1e82611cda565b9150611d2983611cda565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611d5e57611d5d611ce4565b5b828201905092915050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611db281611d7d565b8114611dbd57600080fd5b50565b600081359050611dcf81611da9565b92915050565b600060208284031215611deb57611dea611d73565b5b6000611df984828501611dc0565b91505092915050565b60008115159050919050565b611e1781611e02565b82525050565b6000602082019050611e326000830184611e0e565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611e8b82611e42565b810181811067ffffffffffffffff82111715611eaa57611ea9611e53565b5b80604052505050565b6000611ebd611d69565b9050611ec98282611e82565b919050565b600067ffffffffffffffff821115611ee957611ee8611e53565b5b611ef282611e42565b9050602081019050919050565b82818337600083830152505050565b6000611f21611f1c84611ece565b611eb3565b905082815260208101848484011115611f3d57611f3c611e3d565b5b611f48848285611eff565b509392505050565b600082601f830112611f6557611f64611e38565b5b8135611f75848260208601611f0e565b91505092915050565b611f8781611cda565b8114611f9257600080fd5b50565b600081359050611fa481611f7e565b92915050565b600080600060608486031215611fc357611fc2611d73565b5b600084013567ffffffffffffffff811115611fe157611fe0611d78565b5b611fed86828701611f50565b9350506020611ffe86828701611f95565b925050604061200f86828701611f95565b9150509250925092565b61202281611cda565b82525050565b600060208201905061203d6000830184612019565b92915050565b6000819050919050565b61205681612043565b811461206157600080fd5b50565b6000813590506120738161204d565b92915050565b60006020828403121561208f5761208e611d73565b5b600061209d84828501612064565b91505092915050565b6120af81612043565b82525050565b60006020820190506120ca60008301846120a6565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006120fb826120d0565b9050919050565b61210b816120f0565b811461211657600080fd5b50565b60008135905061212881612102565b92915050565b6000806040838503121561214557612144611d73565b5b600061215385828601612064565b925050602061216485828601612119565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b838110156121a857808201518184015260208101905061218d565b838111156121b7576000848401525b50505050565b60006121c88261216e565b6121d28185612179565b93506121e281856020860161218a565b6121eb81611e42565b840191505092915050565b6000602082019050818103600083015261221081846121bd565b905092915050565b60006020828403121561222e5761222d611d73565b5b600061223c84828501611f95565b91505092915050565b6000806040838503121561225c5761225b611d73565b5b600061226a85828601612119565b925050602061227b85828601611f95565b9150509250929050565b6000606082019050818103600083015261229f81866121bd565b90506122ae6020830185612019565b6122bb6040830184612019565b949350505050565b600080604083850312156122da576122d9611d73565b5b60006122e885828601611f95565b92505060206122f985828601611f95565b9150509250929050565b61230c816120f0565b82525050565b60006020820190506123276000830184612303565b92915050565b7f446576692065737365726520756e2047616d65204d617374657220706572206560008201527f7365677569726520717565737461206f706572617a696f6e6500000000000000602082015250565b6000612389603983612179565b91506123948261232d565b604082019050919050565b600060208201905081810360008301526123b88161237c565b9050919050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b600061241b602f83612179565b9150612426826123bf565b604082019050919050565b6000602082019050818103600083015261244a8161240e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006124ba82611cda565b91506124c583611cda565b9250828210156124d8576124d7611ce4565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600061251d82611cda565b9150600082141561253157612530611ce4565b5b600182039050919050565b600061254782611cda565b915061255283611cda565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561258b5761258a611ce4565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006125d082611cda565b91506125db83611cda565b9250826125eb576125ea612596565b5b828204905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061263d57607f821691505b60208210811415612651576126506125f6565b5b50919050565b7f536f6e6f2073746174692076656e6475746920747574746920676c692065736560008201527f6d706c617269206469207175657374274974656d000000000000000000000000602082015250565b60006126b3603483612179565b91506126be82612657565b604082019050919050565b600060208201905081810360008301526126e2816126a6565b9050919050565b7f4e6f6e2068616920616262617374616e7a6120476f6c64000000000000000000600082015250565b600061271f601783612179565b915061272a826126e9565b602082019050919050565b6000602082019050818103600083015261274e81612712565b9050919050565b600061276082611cda565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561279357612792611ce4565b5b600182019050919050565b600081905092915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b60006127df60178361279e565b91506127ea826127a9565b601782019050919050565b60006128008261216e565b61280a818561279e565b935061281a81856020860161218a565b80840191505092915050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b600061285c60118361279e565b915061286782612826565b601182019050919050565b600061287d826127d2565b915061288982856127f5565b91506128948261284f565b91506128a082846127f5565b91508190509392505050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b60006128e2602083612179565b91506128ed826128ac565b602082019050919050565b60006020820190508181036000830152612911816128d5565b905091905056fea2646970667358221220c93c2374d52b52418ca77a13eb49195415369b3b2e1e239510c449327841285764736f6c634300080a0033";

    public static final String FUNC_DEFAULT_ADMIN_ROLE = "DEFAULT_ADMIN_ROLE";

    public static final String FUNC_GAME_MASTER = "GAME_MASTER";

    public static final String FUNC_GAME_NAME = "GAME_NAME";

    public static final String FUNC_GETROLEADMIN = "getRoleAdmin";

    public static final String FUNC_GRANTROLE = "grantRole";

    public static final String FUNC_HASROLE = "hasRole";

    public static final String FUNC_RENOUNCEROLE = "renounceRole";

    public static final String FUNC_REVOKEROLE = "revokeRole";

    public static final String FUNC_SUPPORTSINTERFACE = "supportsInterface";

    public static final String FUNC_GETGAMENAME = "getGameName";

    public static final String FUNC_CREATEITEM = "createItem";

    public static final String FUNC_GETARMORYWEIGHT = "getArmoryWeight";

    public static final String FUNC_GETITEMFROMARMORY = "getItemFromArmory";

    public static final String FUNC_GETGOLD = "getGold";

    public static final String FUNC_UPDATEPLAYERINFO = "updatePlayerInfo";

    public static final String FUNC_DRAWBACK = "drawback";

    public static final String FUNC_GETOWNER = "getOwner";

    public static final String FUNC_GETINVENTORYWEIGHT = "getInventoryWeight";

    public static final String FUNC_GETITEMFROMINVENORY = "getItemFromInvenory";

    public static final String FUNC_BUYITEM = "buyItem";

    public static final String FUNC_SELLITEM = "sellItem";

    public static final Event ROLEADMINCHANGED_EVENT = new Event("RoleAdminChanged",
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>(true) {}, new TypeReference<Bytes32>(true) {}, new TypeReference<Bytes32>(true) {}));
    ;

    public static final Event ROLEGRANTED_EVENT = new Event("RoleGranted",
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>(true) {}, new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
    ;

    public static final Event ROLEREVOKED_EVENT = new Event("RoleRevoked",
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>(true) {}, new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
    ;

    protected static final HashMap<String, String> _addresses;

    static {
        _addresses = new HashMap<String, String>();
        _addresses.put("5777", "0xbA52D847DFE9eB509af85Aa161A7210Bd50A9128");
    }

    @Deprecated
    protected Game(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected Game(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected Game(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected Game(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public List<RoleAdminChangedEventResponse> getRoleAdminChangedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ROLEADMINCHANGED_EVENT, transactionReceipt);
        ArrayList<RoleAdminChangedEventResponse> responses = new ArrayList<RoleAdminChangedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            RoleAdminChangedEventResponse typedResponse = new RoleAdminChangedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.previousAdminRole = (byte[]) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.newAdminRole = (byte[]) eventValues.getIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<RoleAdminChangedEventResponse> roleAdminChangedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, RoleAdminChangedEventResponse>() {
            @Override
            public RoleAdminChangedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ROLEADMINCHANGED_EVENT, log);
                RoleAdminChangedEventResponse typedResponse = new RoleAdminChangedEventResponse();
                typedResponse.log = log;
                typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.previousAdminRole = (byte[]) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.newAdminRole = (byte[]) eventValues.getIndexedValues().get(2).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<RoleAdminChangedEventResponse> roleAdminChangedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ROLEADMINCHANGED_EVENT));
        return roleAdminChangedEventFlowable(filter);
    }

    public List<RoleGrantedEventResponse> getRoleGrantedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ROLEGRANTED_EVENT, transactionReceipt);
        ArrayList<RoleGrantedEventResponse> responses = new ArrayList<RoleGrantedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            RoleGrantedEventResponse typedResponse = new RoleGrantedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.account = (String) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.sender = (String) eventValues.getIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<RoleGrantedEventResponse> roleGrantedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, RoleGrantedEventResponse>() {
            @Override
            public RoleGrantedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ROLEGRANTED_EVENT, log);
                RoleGrantedEventResponse typedResponse = new RoleGrantedEventResponse();
                typedResponse.log = log;
                typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.account = (String) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.sender = (String) eventValues.getIndexedValues().get(2).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<RoleGrantedEventResponse> roleGrantedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ROLEGRANTED_EVENT));
        return roleGrantedEventFlowable(filter);
    }

    public List<RoleRevokedEventResponse> getRoleRevokedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ROLEREVOKED_EVENT, transactionReceipt);
        ArrayList<RoleRevokedEventResponse> responses = new ArrayList<RoleRevokedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            RoleRevokedEventResponse typedResponse = new RoleRevokedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.account = (String) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.sender = (String) eventValues.getIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<RoleRevokedEventResponse> roleRevokedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, RoleRevokedEventResponse>() {
            @Override
            public RoleRevokedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ROLEREVOKED_EVENT, log);
                RoleRevokedEventResponse typedResponse = new RoleRevokedEventResponse();
                typedResponse.log = log;
                typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.account = (String) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.sender = (String) eventValues.getIndexedValues().get(2).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<RoleRevokedEventResponse> roleRevokedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ROLEREVOKED_EVENT));
        return roleRevokedEventFlowable(filter);
    }

    public RemoteFunctionCall<byte[]> DEFAULT_ADMIN_ROLE() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_DEFAULT_ADMIN_ROLE,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public RemoteFunctionCall<byte[]> GAME_MASTER() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GAME_MASTER,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public RemoteFunctionCall<String> GAME_NAME() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GAME_NAME,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<byte[]> getRoleAdmin(byte[] role) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETROLEADMIN,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public RemoteFunctionCall<TransactionReceipt> grantRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_GRANTROLE,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role),
                new org.web3j.abi.datatypes.Address(account)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Boolean> hasRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_HASROLE,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role),
                new org.web3j.abi.datatypes.Address(account)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<TransactionReceipt> renounceRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_RENOUNCEROLE,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role),
                new org.web3j.abi.datatypes.Address(account)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> revokeRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REVOKEROLE,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role),
                new org.web3j.abi.datatypes.Address(account)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Boolean> supportsInterface(byte[] interfaceId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_SUPPORTSINTERFACE,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes4(interfaceId)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<String> getGameName() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETGAMENAME,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<TransactionReceipt> createItem(String name, BigInteger price, BigInteger qtyMAX) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_CREATEITEM,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(name),
                new org.web3j.abi.datatypes.generated.Uint256(price),
                new org.web3j.abi.datatypes.generated.Uint256(qtyMAX)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<BigInteger> getArmoryWeight() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETARMORYWEIGHT,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<Tuple3<String, BigInteger, BigInteger>> getItemFromArmory(BigInteger id) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETITEMFROMARMORY,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(id)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple3<String, BigInteger, BigInteger>>(function,
                new Callable<Tuple3<String, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple3<String, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple3<String, BigInteger, BigInteger>(
                                (String) results.get(0).getValue(),
                                (BigInteger) results.get(1).getValue(),
                                (BigInteger) results.get(2).getValue());
                    }
                });
    }

    public RemoteFunctionCall<BigInteger> getGold() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETGOLD,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> updatePlayerInfo(String who, BigInteger goldAdd) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_UPDATEPLAYERINFO,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(who),
                new org.web3j.abi.datatypes.generated.Uint256(goldAdd)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> drawback() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DRAWBACK,
                Arrays.<Type>asList(),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<String> getOwner(BigInteger id, BigInteger num) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETOWNER,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(id),
                new org.web3j.abi.datatypes.generated.Uint256(num)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<BigInteger> getInventoryWeight() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETINVENTORYWEIGHT,
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<Tuple3<String, BigInteger, BigInteger>> getItemFromInvenory(BigInteger idInventory) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETITEMFROMINVENORY,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(idInventory)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple3<String, BigInteger, BigInteger>>(function,
                new Callable<Tuple3<String, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple3<String, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple3<String, BigInteger, BigInteger>(
                                (String) results.get(0).getValue(),
                                (BigInteger) results.get(1).getValue(),
                                (BigInteger) results.get(2).getValue());
                    }
                });
    }

    public RemoteFunctionCall<TransactionReceipt> buyItem(BigInteger id) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_BUYITEM,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(id)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> sellItem(BigInteger idInventory) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SELLITEM,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(idInventory)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static Game load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new Game(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static Game load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new Game(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static Game load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new Game(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static Game load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new Game(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<Game> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(Game.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    public static RemoteCall<Game> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(Game.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<Game> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Game.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<Game> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Game.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    protected String getStaticDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }

    public static String getPreviouslyDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }

    public static class RoleAdminChangedEventResponse extends BaseEventResponse {
        public byte[] role;

        public byte[] previousAdminRole;

        public byte[] newAdminRole;
    }

    public static class RoleGrantedEventResponse extends BaseEventResponse {
        public byte[] role;

        public String account;

        public String sender;
    }

    public static class RoleRevokedEventResponse extends BaseEventResponse {
        public byte[] role;

        public String account;

        public String sender;
    }
}
